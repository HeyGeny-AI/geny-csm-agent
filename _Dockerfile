# FROM dailyco/pipecat-base:latest

# # Enable bytecode compilation
# ENV UV_COMPILE_BYTECODE=1

# # Copy from the cache instead of linking since it's a mounted volume
# ENV UV_LINK_MODE=copy

# # Install Git (required for dependencies pulled from git+ URLs)
# RUN apt-get update && apt-get install -y git && apt-get clean && rm -rf /var/lib/apt/lists/*

# # Install the project's dependencies using the lockfile and settings
# RUN --mount=type=cache,target=/root/.cache/uv \
#     --mount=type=bind,source=uv.lock,target=uv.lock \
#     --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
#     uv sync --locked --no-install-project --no-dev

# COPY ./botclient.py botclient.py

# # Copy the Gemini Live application code
# COPY ./geny-bot.py bot.py

# # Optionally copy other files
# # COPY ./credentials.json credentials.json
# # COPY ./bot-cascade.py bot.py



FROM dailyco/pipecat-base:latest
# FROM ghcr.io/daily-co/pipecat-base:latest

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install Git (required for dependencies pulled from git+ URLs)
RUN apt-get update && apt-get install -y git && apt-get clean && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install dependencies from pyproject + lock
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --no-install-project --no-dev

# Copy your bot source code into /app
# COPY ./botclient.py /app/botclient.py
COPY ./geny-bot.py /app/bot.py

ENV PYTHONPATH=/app

# Optional: copy any credentials or support files
# COPY ./credentials.json /app/credentials.json

# Default command (Pipecat base image runs your app automatically)
CMD ["python", "bot.py"]
